# gt_theme_excel { #gt_extras.gt_theme_excel }

```python
gt_theme_excel(gt, color='lightgrey')
```

Applies an Excel-inspired theme to a GT table.

This function styles a `GT` object with a look inspired by Microsoft Excel tables.

## Parameters {.doc-section .doc-section-parameters}

| Name   | Type   | Description                                                                                                             | Default       |
|--------|--------|-------------------------------------------------------------------------------------------------------------------------|---------------|
| gt     | GT     | An existing `GT` object.                                                                                                | _required_    |
| color  | str    | A string indicating the color of the row striping, defaults to a light gray. Accepts either named colors or hex colors. | `'lightgrey'` |

## Returns {.doc-section .doc-section-returns}

| Name   | Type   | Description                                           |
|--------|--------|-------------------------------------------------------|
|        | GT     | The themed `GT` object, allowing for method chaining. |

## Examples {.doc-section .doc-section-examples}

```{python}
from great_tables import GT, md
from great_tables.data import gtcars
import gt_extras as gte

gtcars_mini = gtcars[["model", "year", "hp", "trq"]].head(5)

gt = (
    GT(gtcars_mini, rowname_col="model")
    .tab_stubhead(label=md("*Car*"))
    .tab_header(title="Car Collection")
)

gt.pipe(gte.gt_theme_excel)
```