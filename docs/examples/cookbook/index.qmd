---
title: Cookbook
jupyter: python3
---

```{python}
# | label: setup
import polars as pl
from great_tables import GT, html
import gt_extras as gte
```

::: {.callout-tip collapse="false"}
On this page you will find on the left, basic tables created with **great-tables**, and on the right, the same tables styled with one or more **gt-extras** functions.
:::

## Formatting and HTML

### Two Column Layout

::::: {.grid}

:::{.g-col-lg-6 .g-col-12 .shrink-example}
#### Large Landmasses

```{python}
# | label : large-landmasses
# | code-fold: true
# | code-summary: "Show the code"
from great_tables.data import islands

def make_simple_table(data):
    gt = (
        GT(data)
        .tab_stub(rowname_col="name")
        .tab_stubhead(label="landmass")
        .tab_header(title="Large Landmasses of the World")
    )

    return gt

islands_first_20 = (
    pl.from_pandas(islands)
    .sort("size", descending=True)
    .head(20)
)

make_simple_table(islands_first_20)
```

:::

:::{.g-col-lg-6 .g-col-12 .shrink-example}
#### gt_two_column_layout
```{python}
# | label : two-column-layout
# | code-fold: true
# | code-summary: "Show the code"
def make_color_box_table(data):
    gt = make_simple_table(data)

    gt = gt.pipe(
        gte.gt_color_box,
        columns="size",
        domain=[0, 17000],
        palette=["lightblue", "darkblue"]
    )

    return gt

islands_first_10 = (
    pl.from_pandas(islands)
    .sort("size", descending=True)
    .slice(0, 10)
)

islands_second_10 = (
    pl.from_pandas(islands)
    .sort("size", descending=True)
    .slice(10, 10)
)

gt1 = make_color_box_table(islands_first_10)
gt2 = make_color_box_table(islands_second_10)

gte.gt_two_column_layout(gt1, gt2, table_header_from=1)
```

:::

:::::




<!-- ```{python}
from great_tables.data import airquality

airquality_mini = airquality.head(10).assign(Year = 1973)

(
    GT(airquality_mini)
    .tab_header(
        title="New York Air Quality Measurements",
        subtitle="Daily measurements in New York City (May 1-10, 1973)"
    )
    .tab_spanner(
        label="Time",
        columns=["Year", "Month", "Day"]
    )
    .tab_spanner(
        label="Measurement",
        columns=["Ozone", "Solar_R", "Wind", "Temp"]
    )
    .cols_move_to_start(columns=["Year", "Month", "Day"])
    .cols_label(
        Ozone = html("Ozone,<br>ppbV"),
        Solar_R = html("Solar R.,<br>cal/m<sup>2</sup>"),
        Wind = html("Wind,<br>mph"),
        Temp = html("Temp,<br>&deg;F")
    )
)
``` -->
