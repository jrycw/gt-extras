---
title: Examples With Code
jupyter: python3
echo: false
---


## Plotting

### gt_plt_bar
```{python}
# | label: gt_plt_bar
from great_tables import GT
from great_tables.data import gtcars
import gt_extras as gte

gtcars_mini = gtcars.loc[
    9:17,
    ["model", "mfr", "year", "hp", "hp_rpm", "trq", "trq_rpm", "mpg_c", "mpg_h"]
]

gt = (
    GT(gtcars_mini, rowname_col="model")
    .tab_stubhead(label="Car")
    .cols_align("center")
    .cols_align("left", columns="mfr")
)

gt.pipe(
    gte.gt_plt_bar,
    columns= ["hp", "hp_rpm", "trq", "trq_rpm", "mpg_c", "mpg_h"]
)
```
{{< include ./show-last.qmd >}}

### gt_plt_bar_pct
```{python}
# | label: gt_plt_bar_pct
import polars as pl
from great_tables import GT
import gt_extras as gte

df = pl.DataFrame({"x": [10, 20, 30, 40]}).with_columns(
    pl.col("x").alias("autoscale_on"),
    pl.col("x").alias("autoscale_off"),
)

gt = GT(df)

(
    gt.pipe(
        gte.gt_plt_bar_pct,
        column=["autoscale_on"],
        autoscale=True,
        labels=True,
        fill="green",
    ).pipe(
        gte.gt_plt_bar_pct,
        column=["autoscale_off"],
        autoscale=False,
        labels=True,
    )
)
```
{{< include ./show-last.qmd >}}

### gt_plt_bar_stack
```{python}
# | label: gt_plt_bar_stack
import pandas as pd
from great_tables import GT
import gt_extras as gte

df = pd.DataFrame({
    "x": ["Example A", "Example B", "Example C"],
    "col": [
        [10, 40, 50],
        [30, 30, 40],
        [50, 20, 30],
    ],
})

gt = GT(df)

gt.pipe(
    gte.gt_plt_bar_stack,
    column="col",
    palette=["red", "grey", "black"],
    labels=["Group 1", "Group 2", "Group 3"],
    width=200,
)
```
{{< include ./show-last.qmd >}}

### gt_plt_conf_int
```{python}
# | label: gt_plt_conf_int
import pandas as pd
from great_tables import GT
import gt_extras as gte

df = pd.DataFrame({
    'group': ['A', 'B', 'C'],
    'mean': [5.2, 7.8, 3.4],
    'ci_lower': [3.1, 6.1, 1.8],
    'ci_upper': [7.3, 9.7, 5.0],
    'ci': [5.2, 7.8, 3.4],
})

gt = GT(df)
gt.pipe(
    gte.gt_plt_conf_int,
    column='ci',
    ci_columns=['ci_lower', 'ci_upper'],
    width=120,
)
```
{{< include ./show-last.qmd >}}

### gt_plt_dot
```{python}
# | label: gt_plt_dot
from great_tables import GT
from great_tables.data import gtcars
import gt_extras as gte

gtcars_mini = gtcars.loc[8:20, ["model", "mfr", "hp"]]

gt = (
    GT(gtcars_mini, rowname_col="model")
    .tab_stubhead(label="Car")
)

gt.pipe(gte.gt_plt_dot, category_col="mfr", data_col="hp")
```
{{< include ./show-last.qmd >}}

### gt_plt_dumbbell
```{python}
# | label: gt_plt_dumbbell
import pandas as pd
from great_tables import GT, html, style, loc
from great_tables.data import sp500
import gt_extras as gte

# Trim the data to December 2008
df = sp500[["date", "open", "close"]].copy()
df["date"] = pd.to_datetime(df["date"], errors='coerce')

dec_2008 = df[
    (df["date"].dt.month == 12) &
    (df["date"].dt.year == 2008)
]
dec_2008 = dec_2008.iloc[::-1].iloc[2:11]

# Make the Great Table
gt = (
    GT(dec_2008)
    .tab_source_note(html("Purple: Open<br>Green: Close"))
    .tab_style(
        style=style.text(align="right"),
        locations=[loc.source_notes()]
    )
)

gt.pipe(
    gte.gt_plt_dumbbell,
    col1='open',
    col2='close',
    label = "Open to Close ($)",
    num_decimals=0,
    width = 250,
)
```
{{< include ./show-last.qmd >}}

### gt_plt_winloss
```{python}
# | label: gt_plt_winloss
from great_tables import GT, md
import gt_extras as gte
import pandas as pd

df = pd.DataFrame(
    {
        "Team": ["Liverpool", "Chelsea", "Man City"],
        "10 Games": [
            [1, 1, 0, 1, 0.5, 1, 0, 1, 1, 0],
            [0, 0, 1, 0, 1, 1, 1, 0, 1, 1],
            [0.5, 1, 0.5, 0, 1, 0, 1, 0.5, 1, 0],
        ],
    }
)

gt = GT(df)

gt.pipe(
    gte.gt_plt_winloss,
    column="10 Games",
    win_color="green",
)
```
{{< include ./show-last.qmd >}}

## Coloring

### gt_color_box
```{python}
# | label: gt_color_box
from great_tables import GT
from great_tables.data import islands
import gt_extras as gte

islands_mini = (
    islands
    .sort_values(by="size", ascending=False)
    .head(10)
)

gt = (
    GT(islands_mini, rowname_col="name")
    .tab_stubhead(label="Island")
)

gt.pipe(gte.gt_color_box, columns="size", palette=["lightblue", "navy"])
```
{{< include ./show-last.qmd >}}

### gt_data_color_by_group
```{python}
# | label: gt_data_color_by_group
from great_tables import GT, md
from great_tables.data import exibble
import gt_extras as gte

gt = (
    GT(exibble, rowname_col="row", groupname_col="group")
    .cols_hide(columns=None)
    .cols_unhide("num")
    .cols_label({"num": "color by group"})
    .pipe(gte.gt_duplicate_column, column="num", dupe_name="color all")
    .tab_source_note(md("Left: `gt_data_color_by_group`, Right: `data_color`"))
)

(
    gt
    .data_color(columns="color all", palette="PiYG")
    .pipe(gte.gt_data_color_by_group, columns=["num"], palette="PiYG")
)
```
{{< include ./show-last.qmd >}}

### gt_highlight_cols
```{python}
# | label: gt_highlight_cols
from great_tables import GT, md
from great_tables.data import gtcars
import gt_extras as gte

gtcars_mini = gtcars[["model", "year", "hp", "trq"]].head(8)

gt = (
    GT(gtcars_mini, rowname_col="model")
    .tab_stubhead(label=md("*Car*"))
)

gt.pipe(gte.gt_highlight_cols, columns="hp")
```
{{< include ./show-last.qmd >}}

### gt_highlight_rows
```{python}
# | label: gt_highlight_rows
from great_tables import GT, md
from great_tables.data import gtcars
import gt_extras as gte

gtcars_mini = gtcars[["model", "year", "hp", "trq"]].head(8)

gt = (
    GT(gtcars_mini, rowname_col="model")
    .tab_stubhead(label=md("*Car*"))
)

gt.pipe(gte.gt_highlight_rows, rows=[2, 7])
```
{{< include ./show-last.qmd >}}

### gt_hulk_col_numeric
```{python}
# | label: gt_hulk_col_numeric
from great_tables import GT
from great_tables.data import gtcars
import gt_extras as gte

gtcars_mini = gtcars.loc[0:8, ["model", "mfr", "year", "hp", "trq", "mpg_h"]]

gt = (
    GT(gtcars_mini, rowname_col="model")
    .tab_stubhead(label="Car")
)

gt.pipe(gte.gt_hulk_col_numeric, columns=["hp", "trq", "mpg_h"])
```
{{< include ./show-last.qmd >}}
